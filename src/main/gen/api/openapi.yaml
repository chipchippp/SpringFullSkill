openapi: 3.0.1
info:
  description: Sample Code
  license:
    name: Api License
    url: http://localhost:8080
  title: Sample Code
  version: v1.0.0
servers:
- description: server test
  url: http://localhost:8080
tags:
- description: User API
  name: User Controller
paths:
  /api/v1/user/{userId}:
    delete:
      description: Delete user
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDataObject'
          description: No Content
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Delete user
      tags:
      - User Controller
      x-accepts: '*/*'
    get:
      description: Get user by id
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDataUserRequestDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get user by id
      tags:
      - User Controller
      x-accepts: '*/*'
    patch:
      description: Change status
      operationId: changeStatus
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDataObject'
          description: Accepted
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Change status
      tags:
      - User Controller
      x-accepts: '*/*'
    put:
      description: Update user
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        "202":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDataObject'
          description: Accepted
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Update user
      tags:
      - User Controller
      x-content-type: application/json
      x-accepts: '*/*'
  /api/v1/user/add:
    post:
      description: Add user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDataInteger'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Add user
      tags:
      - User Controller
      x-content-type: application/json
      x-accepts: '*/*'
  /api/v1/user/list:
    get:
      description: Get all users
      operationId: getUsers
      parameters:
      - explode: true
        in: query
        name: pageNo
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          minimum: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseDataListUserRequestDTO'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get all users
      tags:
      - User Controller
      x-accepts: '*/*'
components:
  schemas:
    ErrorResponse:
      properties:
        timestamp:
          format: date-time
          type: string
        status:
          format: int32
          type: integer
        path:
          type: string
        error:
          type: string
        message:
          type: string
      type: object
    Address:
      example:
        country: country
        streetNumber: streetNumber
        city: city
        street: street
        addressType: 6
        floor: floor
        building: building
        apartmentNumber: apartmentNumber
      properties:
        apartmentNumber:
          type: string
        floor:
          type: string
        building:
          type: string
        streetNumber:
          type: string
        street:
          type: string
        city:
          type: string
        country:
          type: string
        addressType:
          format: int32
          type: integer
      type: object
    UserRequestDTO:
      example:
        firstName: firstName
        lastName: lastName
        password: password
        address:
        - country: country
          streetNumber: streetNumber
          city: city
          street: street
          addressType: 6
          floor: floor
          building: building
          apartmentNumber: apartmentNumber
        - country: country
          streetNumber: streetNumber
          city: city
          street: street
          addressType: 6
          floor: floor
          building: building
          apartmentNumber: apartmentNumber
        gender: MALE
        phone: phone
        dateOfBirth: 2000-01-23T04:56:07.000+00:00
        type: type
        email: email
        username: username
        status: active
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        username:
          type: string
        password:
          type: string
        address:
          items:
            $ref: '#/components/schemas/Address'
          type: array
          uniqueItems: true
        status:
          enum:
          - active
          - inactive
          - none
          type: string
        gender:
          enum:
          - MALE
          - FEMALE
          - OTHER
          type: string
        type:
          type: string
      required:
      - address
      - dateOfBirth
      - firstName
      - lastName
      - password
      - type
      - username
      type: object
    ResponseDataObject:
      example:
        data: "{}"
        message: message
        status: 0
      properties:
        status:
          format: int32
          type: integer
        message:
          type: string
        data:
          type: object
      type: object
    ResponseDataInteger:
      example:
        data: 6
        message: message
        status: 0
      properties:
        status:
          format: int32
          type: integer
        message:
          type: string
        data:
          format: int32
          type: integer
      type: object
    ResponseDataUserRequestDTO:
      example:
        data:
          firstName: firstName
          lastName: lastName
          password: password
          address:
          - country: country
            streetNumber: streetNumber
            city: city
            street: street
            addressType: 6
            floor: floor
            building: building
            apartmentNumber: apartmentNumber
          - country: country
            streetNumber: streetNumber
            city: city
            street: street
            addressType: 6
            floor: floor
            building: building
            apartmentNumber: apartmentNumber
          gender: MALE
          phone: phone
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          type: type
          email: email
          username: username
          status: active
        message: message
        status: 0
      properties:
        status:
          format: int32
          type: integer
        message:
          type: string
        data:
          $ref: '#/components/schemas/UserRequestDTO'
      type: object
    ResponseDataListUserRequestDTO:
      example:
        data:
        - firstName: firstName
          lastName: lastName
          password: password
          address:
          - country: country
            streetNumber: streetNumber
            city: city
            street: street
            addressType: 6
            floor: floor
            building: building
            apartmentNumber: apartmentNumber
          - country: country
            streetNumber: streetNumber
            city: city
            street: street
            addressType: 6
            floor: floor
            building: building
            apartmentNumber: apartmentNumber
          gender: MALE
          phone: phone
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          type: type
          email: email
          username: username
          status: active
        - firstName: firstName
          lastName: lastName
          password: password
          address:
          - country: country
            streetNumber: streetNumber
            city: city
            street: street
            addressType: 6
            floor: floor
            building: building
            apartmentNumber: apartmentNumber
          - country: country
            streetNumber: streetNumber
            city: city
            street: street
            addressType: 6
            floor: floor
            building: building
            apartmentNumber: apartmentNumber
          gender: MALE
          phone: phone
          dateOfBirth: 2000-01-23T04:56:07.000+00:00
          type: type
          email: email
          username: username
          status: active
        message: message
        status: 0
      properties:
        status:
          format: int32
          type: integer
        message:
          type: string
        data:
          items:
            $ref: '#/components/schemas/UserRequestDTO'
          type: array
      type: object

